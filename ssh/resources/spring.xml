<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        ">
		
	<!-- 配置包扫描组件位置 -->
	<context:component-scan base-package="cn.yq.ssh"/>
	
	
	<!-- 读取 db.properties数据库配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 配置 druid 连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close"
	>
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
	</bean>
	
	
	<!-- 配置SessionFactory对象: 就是Spring变种工厂 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 注入数据源（连接池）  -->
		<property name="dataSource" ref="dataSource"/>
		
		<!-- 配置映射文件 -->
		<property name="mappingLocations">
			<array>
				<!-- *通配符 -->
				<value>classpath:cn/yq/ssh/domain/*.hbm.xml</value>
			</array>
		</property>
		
		<!-- 配置hibernate的特有属性，方言，格式化，显示sql等等 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>
	<!-- 配置hibernate的事务-->
		
		<!-- 配置事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<!-- 注入sessionFactor对象 -->
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	
	<!-- 开始Spring的事务配置tx -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		
		<tx:attributes>
			<!-- 事务方法的具体配置，事务的隔离级别，传播规则，是否是只读事务，事务超时时间  -->
			<tx:method name="get*" read-only="true" isolation="REPEATABLE_READ" propagation="REQUIRED" />
			<tx:method name="find*" read-only="true" isolation="REPEATABLE_READ" propagation="REQUIRED"/>
			<tx:method name="select*" read-only="true" isolation="REPEATABLE_READ" propagation="REQUIRED"/>
			<tx:method name="query*" read-only="true" isolation="REPEATABLE_READ" propagation="REQUIRED"/>
			<tx:method name="*" read-only="false" isolation="REPEATABLE_READ" propagation="REQUIRED"/>
		</tx:attributes>
	
	</tx:advice>
	
	
	<!-- 使用SpringAOP把事务切到Service层 -->
	<aop:config>
		<!-- 配置切入点 -->
		<aop:pointcut expression="execution(* cn.yq.ssh.service..*.*(..))" id="pt"/>
		<!-- 配置切面，= 切入点 + 通知（增强）切入事务 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pt"/>
	</aop:config>
	
	<!-- 引入springmvc配置文件 -->
	<!-- <import resource="classpath:springmvc.xml"/> -->
	
</beans>
















